<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hifive.history.repository.mappers.messageCode">

	<!-- DTO 
		private int seq; 
		private String send_id; 
		private String take_id; 
		private String contents; 
		private String wdate; 
		private String rdate; 
		private String state; -->
	
	<resultMap id="MessageDto" type="java.util.HashMap">
		<!-- result javaType="데이터타입" column="db컬럼명" property="맵에서 키값"/ -->
		<result javaType="java.lang.Integer" column="SEQ" property="SEQ" />
		<result javaType="java.lang.String" column="SEND_ID" property="SEND_ID" />
		<result javaType="java.lang.String" column="TAKE_ID" property="TAKE_ID" />
		<result javaType="java.lang.String" column="CONTENTS" property="CONTENTS" />
		<result javaType="java.lang.String" column="WDATE" property="WDATE" />
		<result javaType="java.lang.String" column="RDATE" property="RDATE" />
		<result javaType="java.lang.String" column="STATE" property="STATE" />
	</resultMap>
	
	<!-- SEQ, SEND_ID, TAKE_ID, CONTENTS, WDATE(sysdate), RDATE(null), STATE(0) -->	

	<!-- 쪽지 쓰기 -->
	<update id="hi_insert" parameterType="com.hifive.history.model.MessageDto">
		INSERT INTO MESSAGE_H(SEQ, SEND_ID, TAKE_ID, CONTENTS, RDATE)
		VALUES(SEQ_MESSAGE.NEXTVAL, #{send_id}, #{take_id}, #{contents}, NULL);
	</update>

	
	<!-- 쪽지 읽기 -->
	<select id="hi_detail" parameterType="int" resultType="com.hifive.history.model.MessageDto">
		SELECT *
		FROM MESSAGE_H
		WHERE SEQ=#{seq}
	</select>
	
	<!-- 리스트 불러오기(보낸 쪽지) -->
	<select id="hi_select_sendlist" parameterType="String" resultType="com.hifive.history.model.MessageDto">
		SELECT T1.*, T2.*
		FROM(
			SELECT T.IDX, T.SEQ, T.SEND_ID, T.TAKE_ID, T.CONTENTS, 							
		           TO_CHAR(T.WDATE, 'YYYY-MM-DD') WDATE,							
		           TO_CHAR(T.RDATE, 'YYYY-MM-DD') RDATE,							
		           T.STATE							
		    FROM(							
		     	SELECT ROWNUM IDX,   LST.SEQ,   LST.SEND_ID, LST.TAKE_ID, 							
		               LST.CONTENTS, LST.WDATE, LST.RDATE,   LST.STATE							
		     	FROM(							
		        	SELECT SEQ, SEND_ID, TAKE_ID, CONTENTS, WDATE, RDATE, STATE							
		       		FROM MESSAGE_H							
		        	WHERE SEND_ID=#{sendId}							
		        ORDER BY WDATE DESC							
		          	) LST			
		        <!--[CDATA[ 				
		      	WHERE ROWNUM <= (( 10 * (#{PAGE_NUM}-1))+10 )
		      	]]-->							
		        ) T      							
		    WHERE T.IDX >= (10 * (#{PAGE_NUM}-1)+1)
			) T1 NATURAL JOIN  
		    (                                                  
		      SELECT COUNT(*) TOTAL                                  
		      FROM MESSAGE_H                        
		      WHERE SEND_ID=#{sendId} ) T2
	</select>
	
	<!-- 리스트 불러오기(받은 쪽지) -->
	<select id="hi_select_getlist" parameterType="String" resultType="com.hifive.history.model.MessageDto">
		SELECT T1.*, T2.*
		FROM(
			SELECT T.IDX, T.SEQ, T.SEND_ID, T.TAKE_ID, T.CONTENTS, 							
		           TO_CHAR(T.WDATE, 'YYYY-MM-DD') WDATE,							
		           TO_CHAR(T.RDATE, 'YYYY-MM-DD') RDATE,							
		           T.STATE							
		    FROM(							
		     	SELECT ROWNUM IDX,   LST.SEQ,   LST.SEND_ID, LST.TAKE_ID, 							
		               LST.CONTENTS, LST.WDATE, LST.RDATE,   LST.STATE							
		     	FROM(							
		        	SELECT SEQ, SEND_ID, TAKE_ID, CONTENTS, WDATE, RDATE, STATE							
		       		FROM MESSAGE_H							
		        	WHERE TAKE_ID=#{takeId}							
		        ORDER BY WDATE DESC							
		          	) LST			
		        <!--[CDATA[ 				
		      	WHERE ROWNUM <= (( 10 * (#{PAGE_NUM}-1))+10 )
		      	]]-->							
		        ) T      							
		    WHERE T.IDX >= (10 * (#{PAGE_NUM}-1)+1)
			) T1 NATURAL JOIN  
		    (                                                  
		      SELECT COUNT(*) TOTAL                                  
		      FROM MESSAGE_H                        
		      WHERE TAKE_ID=#{takeId} ) T2
	</select>
	
	<!-- 쪽지 삭제 -->
	<delete id="hi_delete" parameterType="int">
		DELETE 	
		FROM MESSAGE_H			
		WHERE SEQ=#{}	
	</delete>
	
</mapper>


