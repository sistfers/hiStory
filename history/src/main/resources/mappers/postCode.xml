<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hifive.history.repository.mappers.postCode">

<!-- 결과 리턴을 MAP으로 할때 스타일 지정해주기 -->  
<resultMap id = "PostMap" type="java.util.HashMap">
   <result javaType="java.lang.String" column="CONTENT" property="CONTENT" jdbcType="CLOB" />
</resultMap>

<resultMap id="BloggerRankMap" type="java.util.HashMap">
	<result javaType="int" column="RNUM" property="RNUM" />
	<result javaType="java.lang.String" column="ID" property="ID" />
	<result javaType="java.lang.String" column="TITLE" property="TITLE" />
	<result javaType="java.lang.String" column="NAME" property="NAME" />
	<result javaType="java.lang.String" column="PF_IMAGE" property="PF_IMAGE" />
	<!-- result javaType="데이터타입" column="db컬럼명" property="맵에서 키값"/ -->
</resultMap>

<!--포스트쓰기  -->
<insert id="hi_insert"  parameterType="com.hifive.history.model.PostDto">
	INSERT
	INTO POST_H
	  (
	    SEQ,
	    CT_SEQ,
	    ID,
	    FIELD,
	    TITLE,
	    CONTENT,
	    HASHTAG,
	    STATE,
	    CO_STATE
	  )
	  VALUES
	  (
	    SEQ_POST.nextval,
	    #{CT_SEQ},
	    #{ID},
	    #{FIELD},
	    #{TITLE},
	    #{CONTENT},
	    #{HASHTAG},
	    #{STATE},
	    #{CO_STATE}
	  )
</insert>

<!--포스트수정  -->
<update id="hi_update" parameterType="com.hifive.history.model.PostDto">
	UPDATE POST_H
	SET   CT_SEQ  = #{CT_SEQ},
	      FIELD   = #{FIELD},
	      TITLE   = #{TITLE},
	      CONTENT = #{CONTENT},
	      HASHTAG = #{HASHTAG},
	      STATE   = #{STATE}
	      CO_STATE = #{CO_STATE}
	WHERE SEQ     = #{SEQ}
</update>

<!--최신 포스트 1건 읽기  -->
<select id="hi_detail" parameterType="com.hifive.history.model.PostDto" resultType="com.hifive.history.model.PostDto">
	SELECT SEQ,
	      CT_SEQ,
	      ID,
	      FIELD,
	      TITLE,
	      CONTENT,
	      WDATE,
	      HASHTAG,
	      STATE,
	      CO_STATE
	FROM POST_H
	WHERE SEQ = 
	(SELECT MAX(SEQ) MAXSEQ
	      FROM POST_H P
	      WHERE NOT STATE = '2' 
	      AND ID = #{id})
</select>


<!-- 일반 데이터 타입에 대해서는 resultType으로 사용하면 기본 데이터형의 값은 출력된다와 LOB은 null로 처리됨 -->
<!-- 페이징 -->
<select id="hi_selectList" parameterType="hashmap" resultMap="PostMap">
	SELECT TT1.*                                           
	FROM                                                   
	  (SELECT ROWNUM RNUM,                                 
	         T1.*,                                 
	         T2.*                                  
	  FROM                                                 
	  ( SELECT SEQ,
	    CT_SEQ,
	    ID,
	    FIELD,
	    TITLE,
	    CONTENT,
	    WDATE,
	    HASHTAG,
	    STATE,
	    CO_STATE
	  FROM POST_H
	  WHERE ID = #{ID}                       
	        order by SEQ DESC                               
	    )T1 NATURAL JOIN                                   
	    (                                                  
	      SELECT COUNT(*) as TOT_CNT                              
	      FROM POST_H                        
	      WHERE ID = #{ID}                           
	    )T2                                                
	  )TT1                                                 
	WHERE RNUM BETWEEN (5 * (#{PAGE_NUM}-1)+1) AND (( 5 * (#{PAGE_NUM}-1))+5 )
</select>


<!-- 글삭제 -->
<update id="hi_delete" parameterType="int">
UPDATE POST_H
SET   STATE   = #{STATE}
WHERE SEQ     = #{SEQ}
</update>

<!-- 베스트 블로거(4명) -->
<select id="hi_bloggerRankList" parameterType="hashmap" resultMap="BloggerRankMap">
	SELECT TT1.*
	FROM
	(
	    SELECT T3.RNUM AS RNUM, T3.ID AS ID, T3.TITLE AS TITLE, T4.NAME AS NAME, T4.PF_IMAGE AS PF_IMAGE
	    FROM
	    (
	      SELECT ROWNUM RNUM, T1.ID AS ID, T2.TITLE
	      FROM
	      (
	        SELECT COUNT(*) TOTAL_CNT, A.ID
	        FROM POST_H A INNER JOIN LOVE_H B
	        ON A.SEQ = B.POST_SEQ
	        GROUP BY A.ID
	        ORDER BY TOTAL_CNT DESC
	       )T1 INNER JOIN BLOG_H T2
	      ON T1.ID = T2.ID
	    )T3 INNER JOIN USER_H T4
	    ON T3.ID = T4.ID
	)TT1
	<![CDATA[
	WHERE TT1.RNUM <=4
	]]>
</select>

</mapper>